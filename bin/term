#!/usr/bin/env python

# Copyright (C) 2012 Massimo Santini <massimo.santini@unimi.it>
#
# This file is part of Lavagna.
#
# Lavagna is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# Lavagna is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Lavagna.  If not, see <http://www.gnu.org/licenses/>.

from base64 import b64encode
from os import read as osread
from pty import spawn
from sys import argv
from urllib2 import Request, urlopen

host = argv[ 1 ] if len( argv ) >= 2 else 'hal.silab.di.unimi.it:8000'
secret = argv[ 2 ] if len( argv ) == 3 else open( './data/secret.teacher' ).read().strip()
url = 'http://{0}/term/data/{1}'.format( host, secret )

import logging
logging.basicConfig( filename = './data/term.log', level = logging.DEBUG, format='%(asctime)s %(message)s' )

def read( fd ):
	try:
		data = osread( fd, 1024 )
	except:
		logging.exception( '[read] got an exception while reading from pty' )
	try:
		adata = b64encode( data )
		req = Request( url, adata, { 'Content-Type': 'text/plain', 'Content-Length': len( adata ) } )
		f = urlopen( req )
		f.read()
		f.close()
	except:
		logging.exception( '[read] got an exception while talking to server' )
	return data

if __name__ == '__main__':
	torun = True
	while torun:
		try:
			torun = False
			print "Staring to broadcast terminal..."
			spawn( 'bash', read )
			print "Broadcasting terminal ended."
			logging.info( '[spawn] normal exit' )
		except:
			logging.exception( '[spawn] got an exception' )
			torun = True
